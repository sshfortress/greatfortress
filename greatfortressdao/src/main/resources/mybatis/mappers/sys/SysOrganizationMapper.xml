<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sshfortress.dao.system.mapper.SysOrganizationMapper">
  <resultMap id="BaseResultMap" type="com.sshfortress.common.beans.SysOrganization">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="context"  property="context" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
  </resultMap>
  <sql id="Base_Column_List">
    id, organization_name, email, phone, context, pic_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_organization
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectSysOrganization" resultType="com.sshfortress.common.beans.SysOrganization">
  	select 
  	a.id, 
  	IFNULL(a.organization_name,'')organization_name, 
  	IFNULL(a.email,'') email, 
  	IFNULL(a.phone,'') phone, 
  	IFNULL(a.context,'')context, 
  	IFNULL(a.pic_url,'')pic_url,
  	IFNULL(b.last_login_ip,'') last_login_ip,
  	IFNULL(b.last_login_time,'')  last_login_time
    from 
    sys_organization a,
    tb_user_info b 
    where b.user_id =#{userId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_organization
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sshfortress.common.beans.SysOrganization">
    insert into sys_organization (id, organization_name, email, 
      phone, context, pic_url
      )
    values (#{id,jdbcType=INTEGER}, #{organizationName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{context}, #{picUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sshfortress.common.beans.SysOrganization">
    insert into sys_organization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizationName != null">
        organization_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        #{context},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sshfortress.common.beans.SysOrganization">
    update sys_organization
    <set>
      <if test="organizationName != null">
        organization_name = #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sshfortress.common.beans.SysOrganization">
    update sys_organization
    set organization_name = #{organizationName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      context = #{context},
      pic_url = #{picUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>